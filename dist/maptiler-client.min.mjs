function b(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class C{constructor(){this._apiKey="Not defined yet.",this._fetch=b()}set apiKey(n){this._apiKey=n}get apiKey(){return this._apiKey}set fetch(n){this._fetch=n}get fetch(){return this._fetch}}const N=new C;var $=(t=>(t.LATIN="latin",t.NON_LATIN="nonlatin",t.LOCAL="",t.AFAR="aa",t.ABKHAZIAN="ab",t.AVESTAN="ae",t.AFRIKAANS="af",t.AKAN="ak",t.AMHARIC="am",t.ARAGONESE="an",t.ARABIC="ar",t.ASSAMESE="as",t.AVARIC="av",t.AYMARA="ay",t.AZERBAIJANI="az",t.BASHKIR="ba",t.BELARUSIAN="be",t.BULGARIAN="bg",t.BIHARI="bh",t.BISLAMA="bi",t.BAMBARA="bm",t.BENGALI="bn",t.TIBETAN="bo",t.BRETON="br",t.BOSNIAN="bs",t.CATALAN="ca",t.CHECHEN="ce",t.CHAMORRO="ch",t.CORSICAN="co",t.CREE="cr",t.CZECH="cs",t.CHURCH_SLAVIC="cu",t.CHUVASH="cv",t.WELSH="cy",t.DANISH="da",t.GERMAN="de",t.MALDIVIAN="dv",t.DZONGKHA="dz",t.EWE="ee",t.GREEK="el",t.ENGLISH="en",t.ESPERANTO="eo",t.SPANISH="es",t.ESTONIAN="et",t.BASQUE="eu",t.PERSIAN="fa",t.FULAH="ff",t.FINNISH="fi",t.FIJIAN="fj",t.FAROESE="fo",t.FRENCH="fr",t.WESTERN_FRISIAN="fy",t.IRISH="ga",t.GAELIC="gd",t.GALICIAN="gl",t.GUARANI="gn",t.GUJARATI="gu",t.MANX="gv",t.HAUSA="ha",t.HEBREW="he",t.HINDI="hi",t.HIRI_MOTU="ho",t.CROATIAN="hr",t.HAITIAN="ht",t.HUNGARIAN="hu",t.ARMENIAN="hy",t.HERERO="hz",t.INTERLINGUA="ia",t.INDONESIAN="id",t.INTERLINGUE="ie",t.IGBO="ig",t.SICHUAN_YI="ii",t.INUPIAQ="ik",t.IDO="io",t.ICELANDIC="is",t.ITALIAN="it",t.INUKTITUT="iu",t.JAPANESE="ja",t.JAVANESE="jv",t.GEORGIAN="ka",t.KONGO="kg",t.KIKUYU="ki",t.KUANYAMA="kj",t.KAZAKH="kk",t.KALAALLISUT="kl",t.CENTRAL_KHMER="km",t.KANNADA="kn",t.KOREAN="ko",t.KANURI="kr",t.KASHMIRI="ks",t.KURDISH="ku",t.KOMI="kv",t.CORNISH="kw",t.KIRGHIZ="ky",t.LUXEMBOURGISH="lb",t.GANDA="lg",t.LIMBURGAN="li",t.LINGALA="ln",t.LAO="lo",t.LITHUANIAN="lt",t.LUBA_KATANGA="lu",t.LATVIAN="lv",t.MALAGASY="mg",t.MARSHALLESE="mh",t.MAORI="mi",t.MACEDONIAN="mk",t.MALAYALAM="ml",t.MONGOLIAN="mn",t.MARATHI="mr",t.MALAY="ms",t.MALTESE="mt",t.BURMESE="my",t.NAURU="na",t.NORWEGIAN="no",t.NORTH_NDEBELE="nd",t.NEPALI="ne",t.NDONGA="ng",t.DUTCH="nl",t.SOUTH_NDEBELE="nr",t.NAVAJO="nv",t.CHICHEWA="ny",t.OCCITAN="oc",t.OJIBWA="oj",t.OROMO="om",t.ORIYA="or",t.OSSETIC="os",t.PANJABI="pa",t.PALI="pi",t.POLISH="pl",t.PUSHTO="ps",t.PORTUGUESE="pt",t.QUECHUA="qu",t.ROMANSH="rm",t.RUNDI="rn",t.ROMANIAN="ro",t.RUSSIAN="ru",t.KINYARWANDA="rw",t.SANSKRIT="sa",t.SARDINIAN="sc",t.SINDHI="sd",t.NORTHERN_SAMI="se",t.SANGO="sg",t.SINHALA="si",t.SLOVAK="sk",t.SLOVENIAN="sl",t.SAMOAN="sm",t.SHONA="sn",t.SOMALI="so",t.ALBANIAN="sq",t.SERBIAN="sr",t.SWATI="ss",t.SOTHO_SOUTHERN="st",t.SUNDANESE="su",t.SWEDISH="sv",t.SWAHILI="sw",t.TAMIL="ta",t.TELUGU="te",t.TAJIK="tg",t.THAI="th",t.TIGRINYA="ti",t.TURKMEN="tk",t.TAGALOG="tl",t.TSWANA="tn",t.TONGA="to",t.TURKISH="tr",t.TSONGA="ts",t.TATAR="tt",t.TWI="tw",t.TAHITIAN="ty",t.UIGHUR="ug",t.UKRAINIAN="uk",t.URDU="ur",t.UZBEK="uz",t.VENDA="ve",t.VIETNAMESE="vi",t.VOLAPUK="vo",t.WALLOON="wa",t.WOLOF="wo",t.XHOSA="xh",t.YIDDISH="yi",t.YORUBA="yo",t.ZHUANG="za",t.CHINESE="zh",t.ZULU="zu",t))($||{}),w=(t,n,e)=>new Promise((r,s)=>{var i=a=>{try{c(e.next(a))}catch(l){s(l)}},o=a=>{try{c(e.throw(a))}catch(l){s(l)}},c=a=>a.done?r(a.value):Promise.resolve(a.value).then(i,o);c((e=e.apply(t,n)).next())});function R(t){return w(this,arguments,function*(n,e={}){if(N.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 please specify the fetch function with config.fetch");return N.fetch(n,e)})}const p={maptilerApiURL:"https://api.maptiler.com/",mapStyle:"streets-v2"};Object.freeze(p);class f extends Error{constructor(n,e=""){super(`Call to enpoint ${n.url} failed with the status code ${n.status}. ${e}`),this.res=n}}var O=(t,n,e)=>new Promise((r,s)=>{var i=a=>{try{c(e.next(a))}catch(l){s(l)}},o=a=>{try{c(e.throw(a))}catch(l){s(l)}},c=a=>a.done?r(a.value):Promise.resolve(a.value).then(i,o);c((e=e.apply(t,n)).next())});const E={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function v(t){return O(this,arguments,function*(n,e={}){const r=new URL(`geocoding/${encodeURIComponent(n)}.json`,p.maptilerApiURL);if(r.searchParams.set("key",N.apiKey),"bbox"in e&&r.searchParams.set("bbox",[e.bbox.southWest.lng,e.bbox.southWest.lat,e.bbox.northEast.lng,e.bbox.northEast.lat].join(",")),"proximity"in e&&r.searchParams.set("proximity",[e.proximity.lng,e.proximity.lat].join(",")),"language"in e){const o=(Array.isArray(e.language)?e.language:[e.language]).join(",");r.searchParams.set("language",o)}const s=r.toString(),i=yield R(s);if(!i.ok)throw new f(i,i.status in E?E[i.status]:"");return yield i.json()})}function K(t){return O(this,arguments,function*(n,e={}){const r=new URL(`geocoding/${n.lng},${n.lat}.json`,p.maptilerApiURL);if(r.searchParams.set("key",N.apiKey),"bbox"in e&&r.searchParams.set("bbox",[e.bbox.southWest.lng,e.bbox.southWest.lat,e.bbox.northEast.lng,e.bbox.northEast.lat].join(",")),"proximity"in e&&r.searchParams.set("proximity",[e.proximity.lng,e.proximity.lat].join(",")),"language"in e){const o=(Array.isArray(e.language)?e.language:[e.language]).join(",");r.searchParams.set("language",o)}const s=r.toString(),i=yield R(s);if(!i.ok)throw new f(i,i.status in E?E[i.status]:"");return yield i.json()})}const x={forward:v,reverse:K};var M=(t,n,e)=>new Promise((r,s)=>{var i=a=>{try{c(e.next(a))}catch(l){s(l)}},o=a=>{try{c(e.throw(a))}catch(l){s(l)}},c=a=>a.done?r(a.value):Promise.resolve(a.value).then(i,o);c((e=e.apply(t,n)).next())});const P={403:"Key is missing, invalid or restricted"};function G(){return M(this,null,function*(){const t=new URL("geolocation/ip.json",p.maptilerApiURL);t.searchParams.set("key",N.apiKey);const n=t.toString(),e=yield R(n);if(!e.ok)throw new f(e,e.status in P?P[e.status]:"");return yield e.json()})}const D={info:G};var H=(t,n,e)=>new Promise((r,s)=>{var i=a=>{try{c(e.next(a))}catch(l){s(l)}},o=a=>{try{c(e.throw(a))}catch(l){s(l)}},c=a=>a.done?r(a.value):Promise.resolve(a.value).then(i,o);c((e=e.apply(t,n)).next())});const d={403:"Key is missing, invalid or restricted"};function j(t){return H(this,arguments,function*(n,e={}){const r=new URL(`coordinates/search/${n}.json`,p.maptilerApiURL);r.searchParams.set("key",N.apiKey),"limit"in e&&r.searchParams.set("limit",e.limit.toString()),"transformations"in e&&r.searchParams.set("transformations",e.transformations.toString()),"exports"in e&&r.searchParams.set("exports",e.exports.toString());const s=r.toString(),i=yield R(s);if(!i.ok)throw new f(i,i.status in d?d[i.status]:"");return yield i.json()})}function B(t){return H(this,arguments,function*(n,e={}){const r=(Array.isArray(n)?n:[n]).map(c=>`${c.lng},${c.lat}`).join(";"),s=new URL(`coordinates/transform/${r}.json`,p.maptilerApiURL);s.searchParams.set("key",N.apiKey),"sourceCrs"in e&&s.searchParams.set("s_srs",e.sourceCrs.toString()),"targetCrs"in e&&s.searchParams.set("t_srs",e.targetCrs.toString()),"operations"in e&&s.searchParams.set("ops",(Array.isArray(e.operations)?e.operations:[e.operations]).join("|"));const i=s.toString(),o=yield R(i);if(!o.ok)throw new f(o,o.status in d?d[o.status]:"");return yield o.json()})}const W={search:j,transform:B};var _=(t,n,e)=>new Promise((r,s)=>{var i=a=>{try{c(e.next(a))}catch(l){s(l)}},o=a=>{try{c(e.throw(a))}catch(l){s(l)}},c=a=>a.done?r(a.value):Promise.resolve(a.value).then(i,o);c((e=e.apply(t,n)).next())});const T={403:"Key is missing, invalid or restricted"};function F(t){return _(this,null,function*(){const n=new URL(`data/${encodeURIComponent(t)}/features.json`,p.maptilerApiURL);n.searchParams.set("key",N.apiKey);const e=n.toString(),r=yield R(e);if(!r.ok)throw new f(r,r.status in T?T[r.status]:"");return yield r.json()})}const V={get:F};function Y(t,n,e){let r=n[0],s=n[1],i=e[0]-r,o=e[1]-s;if(i!==0||o!==0){const c=((t[0]-r)*i+(t[1]-s)*o)/(i*i+o*o);c>1?(r=e[0],s=e[1]):c>0&&(r+=i*c,s+=o*c)}return i=t[0]-r,o=t[1]-s,i*i+o*o}function L(t,n,e,r,s){let i=r,o;for(let c=n+1;c<e;c++){const a=Y(t[c],t[n],t[e]);a>i&&(o=c,i=a)}i>r&&(o-n>1&&L(t,n,o,r,s),s.push(t[o]),e-o>1&&L(t,o,e,r,s))}function J(t,n){const e=t.length-1,r=[t[0]];return L(t,0,e,n,r),r.push(t[e]),r}function Z(t,n){if(t.length<=2)return t;const e=n!==void 0?n*n:1;return J(t,e)}function U(t,n=!0){let e=`${t.lng},${t.lat}`;return t.color&&n&&(e+=`,${t.color}`),e}function k(t,n=3e3){let e=t.map(i=>i.join(",")).join("|"),r=5e-6;const s=1e-5;for(;e.length>n;)e=Z(t,r).map(i=>`${i[0]},${i[1]}`).join("|"),r+=s;return e}function z(t,n,e={}){var r,s,i,o,c;const a=(r=e.style)!=null?r:p.mapStyle,l=e.hiDPI?"@2x":"",S=(s=e.format)!=null?s:"png";let m=~~((i=e.width)!=null?i:1024),I=~~((o=e.height)!=null?o:1024);e.hiDPI&&(m=~~(m/2),I=~~(I/2));const h=new URL(`maps/${encodeURIComponent(a)}/static/${t.lng},${t.lat},${n}/${m}x${I}${l}.${S}`,p.maptilerApiURL);if("attribution"in e&&h.searchParams.set("attribution",e.attribution.toString()),"marker"in e){let u="";const g="markerIcon"in e;g&&(u+=`icon:${e.markerIcon}|`),g&&"markerAnchor"in e&&(u+=`anchor:${e.markerAnchor}|`),g&&e.hiDPI&&(u+="scale:2|");const y=Array.isArray(e.marker)?e.marker:[e.marker];u+=y.map(A=>U(A,!g)).join("|"),h.searchParams.set("markers",u)}if("path"in e){let u="";if(u+=`fill:${(c=e.pathFillColor)!=null?c:"none"}|`,"pathStrokeColor"in e&&(u+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e){const g=e.pathWidth/(e.hiDPI?2:1);u+=`width:${g.toString()}|`}u+=k(e.path),h.searchParams.set("path",u)}return h.searchParams.set("key",N.apiKey),h.toString()}function Q(t,n={}){var e,r,s,i,o;const c=(e=n.style)!=null?e:p.mapStyle,a=n.hiDPI?"@2x":"",l=(r=n.format)!=null?r:"png";let S=~~((s=n.width)!=null?s:1024),m=~~((i=n.height)!=null?i:1024);n.hiDPI&&(S=~~(S/2),m=~~(m/2));const I=new URL(`maps/${encodeURIComponent(c)}/static/${t.southWest.lng},${t.southWest.lat},${t.northEast.lng},${t.northEast.lat}/${S}x${m}${a}.${l}`,p.maptilerApiURL);if("attribution"in n&&I.searchParams.set("attribution",n.attribution.toString()),"padding"in n&&I.searchParams.set("padding",n.padding.toString()),"marker"in n){let h="";const u="markerIcon"in n;u&&(h+=`icon:${n.markerIcon}|`),u&&"markerAnchor"in n&&(h+=`anchor:${n.markerAnchor}|`),u&&n.hiDPI&&(h+="scale:2|");const g=Array.isArray(n.marker)?n.marker:[n.marker];h+=g.map(y=>U(y,!u)).join("|"),I.searchParams.set("markers",h)}if("path"in n){let h="";if(h+=`fill:${(o=n.pathFillColor)!=null?o:"none"}|`,"pathStrokeColor"in n&&(h+=`stroke:${n.pathStrokeColor}|`),"pathWidth"in n){const u=n.pathWidth/(n.hiDPI?2:1);h+=`width:${u.toString()}|`}h+=k(n.path),I.searchParams.set("path",h)}return I.searchParams.set("key",N.apiKey),I.toString()}function q(t={}){var n,e,r,s,i;if(!("marker"in t)&&!("path"in t))throw new Error("Automatic static maps require markers and/or path to be created.");const o=(n=t.style)!=null?n:p.mapStyle,c=t.hiDPI?"@2x":"",a=(e=t.format)!=null?e:"png";let l=~~((r=t.width)!=null?r:1024),S=~~((s=t.height)!=null?s:1024);t.hiDPI&&(l=~~(l/2),S=~~(S/2));const m=new URL(`maps/${encodeURIComponent(o)}/static/auto/${l}x${S}${c}.${a}`,p.maptilerApiURL);if("attribution"in t&&m.searchParams.set("attribution",t.attribution.toString()),"padding"in t&&m.searchParams.set("padding",t.padding.toString()),"marker"in t){let I="";const h="markerIcon"in t;h&&(I+=`icon:${t.markerIcon}|`),h&&"markerAnchor"in t&&(I+=`anchor:${t.markerAnchor}|`),h&&t.hiDPI&&(I+="scale:2|");const u=Array.isArray(t.marker)?t.marker:[t.marker];I+=u.map(g=>U(g,!h)).join("|"),m.searchParams.set("markers",I)}if("path"in t){let I="";if(I+=`fill:${(i=t.pathFillColor)!=null?i:"none"}|`,"pathStrokeColor"in t&&(I+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t){const h=t.pathWidth/(t.hiDPI?2:1);I+=`width:${h.toString()}|`}I+=k(t.path),m.searchParams.set("path",I)}return m.searchParams.set("key",N.apiKey),m.toString()}const X={centered:z,bounded:Q,automatic:q};export{$ as Language,f as ServiceError,N as config,W as coordinates,V as data,x as geocoding,D as geolocation,X as staticMaps};
