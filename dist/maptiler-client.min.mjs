function j(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class b{constructor(){this._apiKey="Not defined yet.",this._fetch=j()}set apiKey(n){this._apiKey=n}get apiKey(){return this._apiKey}set fetch(n){this._fetch=n}get fetch(){return this._fetch}}const f=new b,$={AUTO:"auto",ALBANIAN:"sq",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HUNGARIAN:"hu",ICELANDIC:"is",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALTESE:"mt",NORWEGIAN:"no",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},K=new Set(Object.values($));function E(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const e=Array.from(new Set(navigator.languages.map(n=>n.split("-")[0]))).filter(n=>K.has(n));return e.length?e[0]:$.ENGLISH}var O=(e,n,t)=>new Promise((r,o)=>{var a=i=>{try{s(t.next(i))}catch(l){o(l)}},c=i=>{try{s(t.throw(i))}catch(l){o(l)}},s=i=>i.done?r(i.value):Promise.resolve(i.value).then(a,c);s((t=t.apply(e,n)).next())});function I(e){return O(this,arguments,function*(n,t={}){if(f.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 please specify the fetch function with config.fetch");return f.fetch(n,t)})}const g={maptilerApiURL:"https://api.maptiler.com/",mapStyle:"streets-v2"};Object.freeze(g);class y extends Error{constructor(n,t=""){super(`Call to enpoint ${n.url} failed with the status code ${n.status}. ${t}`),this.res=n}}var L=(e,n,t)=>new Promise((r,o)=>{var a=i=>{try{s(t.next(i))}catch(l){o(l)}},c=i=>{try{s(t.throw(i))}catch(l){o(l)}},s=i=>i.done?r(i.value):Promise.resolve(i.value).then(a,c);s((t=t.apply(e,n)).next())});const S={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function H(e){return L(this,arguments,function*(n,t={}){const r=new URL(`geocoding/${encodeURIComponent(n)}.json`,g.maptilerApiURL);if(r.searchParams.set("key",f.apiKey),"bbox"in t&&r.searchParams.set("bbox",[t.bbox.southWest.lng,t.bbox.southWest.lat,t.bbox.northEast.lng,t.bbox.northEast.lat].join(",")),"proximity"in t&&r.searchParams.set("proximity",[t.proximity.lng,t.proximity.lat].join(",")),"language"in t){const c=(Array.isArray(t.language)?t.language:[t.language]).map(s=>s===$.AUTO?E():s).join(",");r.searchParams.set("language",c)}const o=r.toString(),a=yield I(o);if(!a.ok)throw new y(a,a.status in S?S[a.status]:"");return yield a.json()})}function T(e){return L(this,arguments,function*(n,t={}){const r=new URL(`geocoding/${n.lng},${n.lat}.json`,g.maptilerApiURL);if(r.searchParams.set("key",f.apiKey),"bbox"in t&&r.searchParams.set("bbox",[t.bbox.southWest.lng,t.bbox.southWest.lat,t.bbox.northEast.lng,t.bbox.northEast.lat].join(",")),"proximity"in t&&r.searchParams.set("proximity",[t.proximity.lng,t.proximity.lat].join(",")),"language"in t){const c=(Array.isArray(t.language)?t.language:[t.language]).map(s=>s===$.AUTO?E():s).join(",");r.searchParams.set("language",c)}const o=r.toString(),a=yield I(o);if(!a.ok)throw new y(a,a.status in S?S[a.status]:"");return yield a.json()})}const D={forward:H,reverse:T};var W=(e,n,t)=>new Promise((r,o)=>{var a=i=>{try{s(t.next(i))}catch(l){o(l)}},c=i=>{try{s(t.throw(i))}catch(l){o(l)}},s=i=>i.done?r(i.value):Promise.resolve(i.value).then(a,c);s((t=t.apply(e,n)).next())});const v={403:"Key is missing, invalid or restricted"};function G(){return W(this,null,function*(){const e=new URL("geolocation/ip.json",g.maptilerApiURL);e.searchParams.set("key",f.apiKey);const n=e.toString(),t=yield I(n);if(!t.ok)throw new y(t,t.status in v?v[t.status]:"");return yield t.json()})}const _={info:G};var x=(e,n,t)=>new Promise((r,o)=>{var a=i=>{try{s(t.next(i))}catch(l){o(l)}},c=i=>{try{s(t.throw(i))}catch(l){o(l)}},s=i=>i.done?r(i.value):Promise.resolve(i.value).then(a,c);s((t=t.apply(e,n)).next())});const k={403:"Key is missing, invalid or restricted"};function B(e){return x(this,arguments,function*(n,t={}){const r=new URL(`coordinates/search/${n}.json`,g.maptilerApiURL);r.searchParams.set("key",f.apiKey),"limit"in t&&r.searchParams.set("limit",t.limit.toString()),"transformations"in t&&r.searchParams.set("transformations",t.transformations.toString()),"exports"in t&&r.searchParams.set("exports",t.exports.toString());const o=r.toString(),a=yield I(o);if(!a.ok)throw new y(a,a.status in k?k[a.status]:"");return yield a.json()})}function M(e){return x(this,arguments,function*(n,t={}){const r=(Array.isArray(n)?n:[n]).map(s=>`${s.lng},${s.lat}`).join(";"),o=new URL(`coordinates/transform/${r}.json`,g.maptilerApiURL);o.searchParams.set("key",f.apiKey),"sourceCrs"in t&&o.searchParams.set("s_srs",t.sourceCrs.toString()),"targetCrs"in t&&o.searchParams.set("t_srs",t.targetCrs.toString()),"operations"in t&&o.searchParams.set("ops",(Array.isArray(t.operations)?t.operations:[t.operations]).join("|"));const a=o.toString(),c=yield I(a);if(!c.ok)throw new y(c,c.status in k?k[c.status]:"");return yield c.json()})}const F={search:B,transform:M};var z=(e,n,t)=>new Promise((r,o)=>{var a=i=>{try{s(t.next(i))}catch(l){o(l)}},c=i=>{try{s(t.throw(i))}catch(l){o(l)}},s=i=>i.done?r(i.value):Promise.resolve(i.value).then(a,c);s((t=t.apply(e,n)).next())});const U={403:"Key is missing, invalid or restricted"};function J(e){return z(this,null,function*(){const n=new URL(`data/${encodeURIComponent(e)}/features.json`,g.maptilerApiURL);n.searchParams.set("key",f.apiKey);const t=n.toString(),r=yield I(t);if(!r.ok)throw new y(r,r.status in U?U[r.status]:"");return yield r.json()})}const V={get:J};function Z(e,n,t){let r=n[0],o=n[1],a=t[0]-r,c=t[1]-o;if(a!==0||c!==0){const s=((e[0]-r)*a+(e[1]-o)*c)/(a*a+c*c);s>1?(r=t[0],o=t[1]):s>0&&(r+=a*s,o+=c*s)}return a=e[0]-r,c=e[1]-o,a*a+c*c}function N(e,n,t,r,o){let a=r,c;for(let s=n+1;s<t;s++){const i=Z(e[s],e[n],e[t]);i>a&&(c=s,a=i)}a>r&&(c-n>1&&N(e,n,c,r,o),o.push(e[c]),t-c>1&&N(e,c,t,r,o))}function q(e,n){const t=e.length-1,r=[e[0]];return N(e,0,t,n,r),r.push(e[t]),r}function Q(e,n){if(e.length<=2)return e;const t=n!==void 0?n*n:1;return q(e,t)}function R(e,n=!0){let t=`${e.lng},${e.lat}`;return e.color&&n&&(t+=`,${e.color}`),t}function w(e,n=3e3){let t=e.map(a=>a.join(",")).join("|"),r=5e-6;const o=1e-5;for(;t.length>n;)t=Q(e,r).map(a=>`${a[0]},${a[1]}`).join("|"),r+=o;return t}function X(e,n,t={}){var r,o,a,c,s;const i=(r=t.style)!=null?r:g.mapStyle,l=t.hiDPI?"@2x":"",d=(o=t.format)!=null?o:"png";let p=~~((a=t.width)!=null?a:1024),u=~~((c=t.height)!=null?c:1024);t.hiDPI&&(p=~~(p/2),u=~~(u/2));const h=new URL(`maps/${encodeURIComponent(i)}/static/${e.lng},${e.lat},${n}/${p}x${u}${l}.${d}`,g.maptilerApiURL);if("attribution"in t&&h.searchParams.set("attribution",t.attribution.toString()),"marker"in t){let m="";const A="markerIcon"in t;A&&(m+=`icon:${t.markerIcon}|`),A&&"markerAnchor"in t&&(m+=`anchor:${t.markerAnchor}|`),A&&t.hiDPI&&(m+="scale:2|");const P=Array.isArray(t.marker)?t.marker:[t.marker];m+=P.map(C=>R(C,!A)).join("|"),h.searchParams.set("markers",m)}if("path"in t){let m="";if(m+=`fill:${(s=t.pathFillColor)!=null?s:"none"}|`,"pathStrokeColor"in t&&(m+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t){const A=t.pathWidth/(t.hiDPI?2:1);m+=`width:${A.toString()}|`}m+=w(t.path),h.searchParams.set("path",m)}return h.searchParams.set("key",f.apiKey),h.toString()}function Y(e,n={}){var t,r,o,a,c;const s=(t=n.style)!=null?t:g.mapStyle,i=n.hiDPI?"@2x":"",l=(r=n.format)!=null?r:"png";let d=~~((o=n.width)!=null?o:1024),p=~~((a=n.height)!=null?a:1024);n.hiDPI&&(d=~~(d/2),p=~~(p/2));const u=new URL(`maps/${encodeURIComponent(s)}/static/${e.southWest.lng},${e.southWest.lat},${e.northEast.lng},${e.northEast.lat}/${d}x${p}${i}.${l}`,g.maptilerApiURL);if("attribution"in n&&u.searchParams.set("attribution",n.attribution.toString()),"padding"in n&&u.searchParams.set("padding",n.padding.toString()),"marker"in n){let h="";const m="markerIcon"in n;m&&(h+=`icon:${n.markerIcon}|`),m&&"markerAnchor"in n&&(h+=`anchor:${n.markerAnchor}|`),m&&n.hiDPI&&(h+="scale:2|");const A=Array.isArray(n.marker)?n.marker:[n.marker];h+=A.map(P=>R(P,!m)).join("|"),u.searchParams.set("markers",h)}if("path"in n){let h="";if(h+=`fill:${(c=n.pathFillColor)!=null?c:"none"}|`,"pathStrokeColor"in n&&(h+=`stroke:${n.pathStrokeColor}|`),"pathWidth"in n){const m=n.pathWidth/(n.hiDPI?2:1);h+=`width:${m.toString()}|`}h+=w(n.path),u.searchParams.set("path",h)}return u.searchParams.set("key",f.apiKey),u.toString()}function tt(e={}){var n,t,r,o,a;if(!("marker"in e)&&!("path"in e))throw new Error("Automatic static maps require markers and/or path to be created.");const c=(n=e.style)!=null?n:g.mapStyle,s=e.hiDPI?"@2x":"",i=(t=e.format)!=null?t:"png";let l=~~((r=e.width)!=null?r:1024),d=~~((o=e.height)!=null?o:1024);e.hiDPI&&(l=~~(l/2),d=~~(d/2));const p=new URL(`maps/${encodeURIComponent(c)}/static/auto/${l}x${d}${s}.${i}`,g.maptilerApiURL);if("attribution"in e&&p.searchParams.set("attribution",e.attribution.toString()),"padding"in e&&p.searchParams.set("padding",e.padding.toString()),"marker"in e){let u="";const h="markerIcon"in e;h&&(u+=`icon:${e.markerIcon}|`),h&&"markerAnchor"in e&&(u+=`anchor:${e.markerAnchor}|`),h&&e.hiDPI&&(u+="scale:2|");const m=Array.isArray(e.marker)?e.marker:[e.marker];u+=m.map(A=>R(A,!h)).join("|"),p.searchParams.set("markers",u)}if("path"in e){let u="";if(u+=`fill:${(a=e.pathFillColor)!=null?a:"none"}|`,"pathStrokeColor"in e&&(u+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e){const h=e.pathWidth/(e.hiDPI?2:1);u+=`width:${h.toString()}|`}u+=w(e.path),p.searchParams.set("path",u)}return p.searchParams.set("key",f.apiKey),p.toString()}const et={centered:X,bounded:Y,automatic:tt};export{b as ClientConfig,$ as Language,y as ServiceError,f as config,F as coordinates,V as data,D as geocoding,_ as geolocation,et as staticMaps};
