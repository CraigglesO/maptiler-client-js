import{llToTile as Y,llToTilePx as J}from"web-merc-projection";var Q=Object.defineProperty,X=(n,e,t)=>e in n?Q(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,C=(n,e,t)=>(X(n,typeof e!="symbol"?e+"":e,t),t);function ee(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class K{constructor(){C(this,"_apiKey",""),C(this,"_fetch",ee())}set apiKey(e){this._apiKey=e}get apiKey(){return this._apiKey}set fetch(e){this._fetch=e}get fetch(){return this._fetch}}const f=new K,L={AUTO:"auto",ALBANIAN:"sq",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HUNGARIAN:"hu",ICELANDIC:"is",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALTESE:"mt",NORWEGIAN:"no",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},te=new Set(Object.values(L));function ne(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const n=Array.from(new Set(navigator.languages.map(e=>e.split("-")[0]))).filter(e=>te.has(e));return n.length?n[0]:L.ENGLISH}var ie=(n,e,t)=>new Promise((r,i)=>{var a=s=>{try{c(t.next(s))}catch(l){i(l)}},o=s=>{try{c(t.throw(s))}catch(l){i(l)}},c=s=>s.done?r(s.value):Promise.resolve(s.value).then(a,o);c((t=t.apply(n,e)).next())});function A(n){return ie(this,arguments,function*(e,t={}){if(f.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 please specify the fetch function with config.fetch");if(new URL(e).searchParams.get("key").trim()==="")throw new Error("The MapTiler Cloud API key is missing. Set it in `config.apiKey` or get one for free at https://maptiler.com");return f.fetch(e,t)})}const g={maptilerApiURL:"https://api.maptiler.com/",mapStyle:"streets-v2"};Object.freeze(g);class v extends Error{constructor(e,t=""){super(`Call to enpoint ${e.url} failed with the status code ${e.status}. ${t}`),this.res=e}}var I=(n,e,t)=>new Promise((r,i)=>{var a=s=>{try{c(t.next(s))}catch(l){i(l)}},o=s=>{try{c(t.throw(s))}catch(l){i(l)}},c=s=>s.done?r(s.value):Promise.resolve(s.value).then(a,o);c((t=t.apply(n,e)).next())});const S={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function x(n,e){if(e.language==null)return;const t=Array.from(new Set((Array.isArray(e.language)?e.language:[e.language]).map(r=>r===L.AUTO?ne():r))).join(",");n.set("language",t)}function O(n,e){var t;n.set("key",(t=e.apiKey)!=null?t:f.apiKey),e.limit!=null&&n.set("limit",String(e.limit)),e.types!=null&&n.set("types",e.types.join(",")),x(n,e)}function j(n,e){O(n,e),e.bbox!=null&&n.set("bbox",e.bbox.join(",")),e.proximity!=null&&n.set("proximity",e.proximity.join(",")),e.country!=null&&n.set("country",e.country.join(",")),e.fuzzyMatch!=null&&n.set("fuzzyMatch",e.fuzzyMatch?"true":"false"),e.autocomplete!=null&&n.set("autocomplete",e.autocomplete?"true":"false")}function re(n){return I(this,arguments,function*(e,t={}){var r;if(typeof e!="string"||e.trim().length===0)throw new Error("The query must be a non-empty string");const i=new URL(`geocoding/${encodeURIComponent(e)}.json`,g.maptilerApiURL),{searchParams:a}=i;j(a,t);const o=i.toString(),c=yield A(o);if(!c.ok)throw new v(c,(r=S[c.status])!=null?r:"");return yield c.json()})}function ae(n){return I(this,arguments,function*(e,t={}){var r;if(!Array.isArray(e)||e.length<2)throw new Error("The position must be an array of form [lng, lat].");const i=new URL(`geocoding/${e[0]},${e[1]}.json`,g.maptilerApiURL);O(i.searchParams,t);const a=i.toString(),o=yield A(a);if(!o.ok)throw new v(o,(r=S[o.status])!=null?r:"");return yield o.json()})}function oe(n){return I(this,arguments,function*(e,t={}){var r;const i=new URL(`geocoding/${e}.json`,g.maptilerApiURL);x(i.searchParams,t);const a=i.toString(),o=yield A(a);if(!o.ok)throw new v(o,(r=S[o.status])!=null?r:"");return yield o.json()})}function se(n){return I(this,arguments,function*(e,t={}){var r;if(!e.length)return[];const i=e.map(u=>encodeURIComponent(u)).join(";"),a=new URL(`geocoding/${i}.json`,g.maptilerApiURL),{searchParams:o}=a;j(o,t);const c=a.toString(),s=yield A(c);if(!s.ok)throw new v(s,(r=S[s.status])!=null?r:"");const l=yield s.json();return e.length===1?[l]:l})}const ce={forward:re,reverse:ae,byId:oe,batch:se,language:L};var le=(n,e,t)=>new Promise((r,i)=>{var a=s=>{try{c(t.next(s))}catch(l){i(l)}},o=s=>{try{c(t.throw(s))}catch(l){i(l)}},c=s=>s.done?r(s.value):Promise.resolve(s.value).then(a,o);c((t=t.apply(n,e)).next())});const H={403:"Key is missing, invalid or restricted"};function pe(){return le(this,arguments,function*(n={}){var e;const t=new URL("geolocation/ip.json",g.maptilerApiURL);t.searchParams.set("key",(e=n.apiKey)!=null?e:f.apiKey);const r=t.toString(),i=yield A(r);if(!i.ok)throw new v(i,i.status in H?H[i.status]:"");return yield i.json()})}const me={info:pe};var M=(n,e,t)=>new Promise((r,i)=>{var a=s=>{try{c(t.next(s))}catch(l){i(l)}},o=s=>{try{c(t.throw(s))}catch(l){i(l)}},c=s=>s.done?r(s.value):Promise.resolve(s.value).then(a,o);c((t=t.apply(n,e)).next())});const T={403:"Key is missing, invalid or restricted"};function ue(n){return M(this,arguments,function*(e,t={}){var r;if(typeof e!="string"||e.trim().length===0)throw new Error("The query must be a non-empty string");const i=new URL(`coordinates/search/${e}.json`,g.maptilerApiURL);i.searchParams.set("key",(r=t.apiKey)!=null?r:f.apiKey),"limit"in t&&i.searchParams.set("limit",t.limit.toString()),"transformations"in t&&i.searchParams.set("transformations",t.transformations.toString()),"exports"in t&&i.searchParams.set("exports",t.exports.toString());const a=i.toString(),o=yield A(a);if(!o.ok)throw new v(o,o.status in T?T[o.status]:"");return yield o.json()})}function he(n){return M(this,arguments,function*(e,t={}){var r;const i=(Array.isArray(e[0])?e:[e]).map(s=>`${s[0]},${s[1]}`).join(";"),a=new URL(`coordinates/transform/${i}.json`,g.maptilerApiURL);a.searchParams.set("key",(r=t.apiKey)!=null?r:f.apiKey),"sourceCrs"in t&&a.searchParams.set("s_srs",t.sourceCrs.toString()),"targetCrs"in t&&a.searchParams.set("t_srs",t.targetCrs.toString()),"operations"in t&&a.searchParams.set("ops",(Array.isArray(t.operations)?t.operations:[t.operations]).join("|"));const o=a.toString(),c=yield A(o);if(!c.ok)throw new v(c,c.status in T?T[c.status]:"");return yield c.json()})}const de={search:ue,transform:he};var ge=(n,e,t)=>new Promise((r,i)=>{var a=s=>{try{c(t.next(s))}catch(l){i(l)}},o=s=>{try{c(t.throw(s))}catch(l){i(l)}},c=s=>s.done?r(s.value):Promise.resolve(s.value).then(a,o);c((t=t.apply(n,e)).next())});const V={403:"Key is missing, invalid or restricted"};function fe(n){return ge(this,arguments,function*(e,t={}){var r;if(typeof e!="string"||e.trim().length===0)throw new Error("The data ID must be a non-empty string");const i=new URL(`data/${encodeURIComponent(e)}/features.json`,g.maptilerApiURL);i.searchParams.set("key",(r=t.apiKey)!=null?r:f.apiKey);const a=i.toString(),o=yield A(a);if(!o.ok)throw new v(o,o.status in V?V[o.status]:"");return yield o.json()})}const ye={get:fe};var ve=Object.defineProperty,Ae=(n,e,t)=>e in n?ve(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,G=(n,e,t)=>(Ae(n,typeof e!="symbol"?e+"":e,t),t);function F(n){const e=/^maptiler:\/\/(.*)/;let t;const r=n.trim();let i;return r.startsWith("http://")||r.startsWith("https://")?i=r:(t=e.exec(r))!==null?i=`https://api.maptiler.com/maps/${t[1]}/style.json`:i=`https://api.maptiler.com/maps/${r}/style.json`,i}class E{constructor(e,t,r,i,a,o){this.name=e,this.variantType=t,this.id=r,this.referenceStyle=i,this.description=a,this.imageURL=o}getName(){return this.name}getFullName(){return`${this.referenceStyle.getName()} ${this.name}`}getType(){return this.variantType}getId(){return this.id}getDescription(){return this.description}getReferenceStyle(){return this.referenceStyle}hasVariant(e){return this.referenceStyle.hasVariant(e)}getVariant(e){return this.referenceStyle.getVariant(e)}getVariants(){return this.referenceStyle.getVariants().filter(e=>e!==this)}getImageURL(){return this.imageURL}getExpandedStyleURL(){return F(this.getId())}}class k{constructor(e,t){this.name=e,this.id=t,G(this,"variants",{}),G(this,"orderedVariants",[])}getName(){return this.name}getId(){return this.id}addVariant(e){this.variants[e.getType()]=e,this.orderedVariants.push(e)}hasVariant(e){return e in this.variants}getVariant(e){return e in this.variants?this.variants[e]:this.orderedVariants[0]}getVariants(){return Object.values(this.variants)}getDefaultVariant(){return this.orderedVariants[0]}}const U=[{referenceStyleID:"STREETS",name:"Streets",description:"",variants:[{id:"streets-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"streets-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"streets-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"streets-v2-night",name:"Night",variantType:"NIGHT",description:"",imageURL:""},{id:"streets-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OUTDOOR",name:"Outdoor",description:"",variants:[{id:"outdoor-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"outdoor-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"WINTER",name:"Winter",description:"",variants:[{id:"winter-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"winter-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"SATELLITE",name:"Satellite",description:"",variants:[{id:"satellite",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"HYBRID",name:"Hybrid",description:"",variants:[{id:"hybrid",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"BASIC",name:"Basic",description:"",variants:[{id:"basic-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"basic-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"basic-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BRIGHT",name:"Bright",description:"",variants:[{id:"bright-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"bright-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"bright-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"bright-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OPENSTREETMAP",name:"OpenStreetMap",description:"",variants:[{id:"openstreetmap",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"TOPO",name:"Topo",description:"",variants:[{id:"topo-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"topo-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"topo-v2-shiny",name:"Shiny",variantType:"SHINY",description:"",imageURL:""},{id:"topo-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""},{id:"topo-v2-topographique",name:"Topographique",variantType:"TOPOGRAPHIQUE",description:"",imageURL:""}]},{referenceStyleID:"VOYAGER",name:"Voyager",description:"",variants:[{id:"voyager-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"voyager-v2-darkmatter",name:"Darkmatter",variantType:"DARK",description:"",imageURL:""},{id:"voyager-v2-positron",name:"Positron",variantType:"LIGHT",description:"",imageURL:""},{id:"voyager-v2-vintage",name:"Vintage",variantType:"VINTAGE",description:"",imageURL:""}]},{referenceStyleID:"TONER",name:"Toner",description:"",variants:[{id:"toner-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"toner-v2-background",name:"Background",variantType:"BACKGROUND",description:"",imageURL:""},{id:"toner-v2-lite",name:"Lite",variantType:"LITE",description:"",imageURL:""},{id:"toner-v2-lines",name:"Lines",variantType:"LINES",description:"",imageURL:""}]},{referenceStyleID:"DATAVIZ",name:"Dataviz",description:"",variants:[{id:"dataviz",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"dataviz-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"dataviz-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BACKDROP",name:"Backdrop",description:"",variants:[{id:"backdrop",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"backdrop-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"backdrop-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"OCEAN",name:"Ocean",description:"",variants:[{id:"ocean",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]}];function Re(n){return new Proxy(n,{get(e,t,r){return e.hasVariant(t)?e.getVariant(t):t.toString().toUpperCase()===t?n.getDefaultVariant():Reflect.get(e,t,r)}})}function Le(){const n={};for(let e=0;e<U.length;e+=1){const t=U[e],r=Re(new k(t.name,t.referenceStyleID));for(let i=0;i<t.variants.length;i+=1){const a=t.variants[i],o=new E(a.name,a.variantType,a.id,r,a.description,a.imageURL);r.addVariant(o)}n[t.referenceStyleID]=r}return n}function P(n){if(!n)return z[U[0].referenceStyleID].getDefaultVariant().getId();if(typeof n=="string"||n instanceof String)return n.trim().toLowerCase();if(n instanceof E)return n.getId();if(n instanceof k)return n.getDefaultVariant().getId()}const z=Le();function Ie(n,e,t){let r=e[0],i=e[1],a=t[0]-r,o=t[1]-i;if(a!==0||o!==0){const c=((n[0]-r)*a+(n[1]-i)*o)/(a*a+o*o);c>1?(r=t[0],i=t[1]):c>0&&(r+=a*c,i+=o*c)}return a=n[0]-r,o=n[1]-i,a*a+o*o}function w(n,e,t,r,i){let a=r,o;for(let c=e+1;c<t;c++){const s=Ie(n[c],n[e],n[t]);s>a&&(o=c,a=s)}a>r&&(o-e>1&&w(n,e,o,r,i),i.push(n[o]),t-o>1&&w(n,o,t,r,i))}function Se(n,e){const t=n.length-1,r=[n[0]];return w(n,0,t,e,r),r.push(n[t]),r}function Te(n,e){if(n.length<=2)return n;const t=e!==void 0?e*e:1;return Se(n,t)}function N(n,e=!0){let t=`${n[0]},${n[1]}`;return n.length===3&&e&&(t+=`,${n[2]}`),t}function b(n,e=3e3){let t=n.map(a=>a.join(",")).join("|"),r=5e-6;const i=1e-5;for(;t.length>e;)t=Te(n,r).map(a=>`${a[0]},${a[1]}`).join("|"),r+=i;return t}function Ue(n,e,t={}){var r,i,a,o,c;const s=P(t.style),l=t.hiDPI?"@2x":"",u=(r=t.format)!=null?r:"png";let h=~~((i=t.width)!=null?i:1024),m=~~((a=t.height)!=null?a:1024);t.hiDPI&&(h=~~(h/2),m=~~(m/2));const p=new URL(`maps/${encodeURIComponent(s)}/static/${n[0]},${n[1]},${e}/${h}x${m}${l}.${u}`,g.maptilerApiURL);if("attribution"in t&&p.searchParams.set("attribution",t.attribution.toString()),"markers"in t){let d="";const y="markerIcon"in t;y&&(d+=`icon:${t.markerIcon}|`),y&&"markerAnchor"in t&&(d+=`anchor:${t.markerAnchor}|`),y&&t.hiDPI&&(d+="scale:2|");const $=Array.isArray(t.markers[0])?t.markers:[t.markers];d+=$.map(Z=>N(Z,!y)).join("|"),p.searchParams.set("markers",d)}if("path"in t){let d="";if(d+=`fill:${(o=t.pathFillColor)!=null?o:"none"}|`,"pathStrokeColor"in t&&(d+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t){const y=t.pathWidth/(t.hiDPI?2:1);d+=`width:${y.toString()}|`}d+=b(t.path),p.searchParams.set("path",d)}return p.searchParams.set("key",(c=t.apiKey)!=null?c:f.apiKey),p.toString()}function De(n,e={}){var t,r,i,a,o;const c=P(e.style),s=e.hiDPI?"@2x":"",l=(t=e.format)!=null?t:"png";let u=~~((r=e.width)!=null?r:1024),h=~~((i=e.height)!=null?i:1024);e.hiDPI&&(u=~~(u/2),h=~~(h/2));const m=new URL(`maps/${encodeURIComponent(c)}/static/${n[0]},${n[1]},${n[2]},${n[3]}/${u}x${h}${s}.${l}`,g.maptilerApiURL);if("attribution"in e&&m.searchParams.set("attribution",e.attribution.toString()),"padding"in e&&m.searchParams.set("padding",e.padding.toString()),"markers"in e){let p="";const d="markerIcon"in e;d&&(p+=`icon:${e.markerIcon}|`),d&&"markerAnchor"in e&&(p+=`anchor:${e.markerAnchor}|`),d&&e.hiDPI&&(p+="scale:2|");const y=Array.isArray(e.markers[0])?e.markers:[e.markers];p+=y.map($=>N($,!d)).join("|"),m.searchParams.set("markers",p)}if("path"in e){let p="";if(p+=`fill:${(a=e.pathFillColor)!=null?a:"none"}|`,"pathStrokeColor"in e&&(p+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e){const d=e.pathWidth/(e.hiDPI?2:1);p+=`width:${d.toString()}|`}p+=b(e.path),m.searchParams.set("path",p)}return m.searchParams.set("key",(o=e.apiKey)!=null?o:f.apiKey),m.toString()}function $e(n={}){var e,t,r,i,a;if(!("markers"in n)&&!("path"in n))throw new Error("Automatic static maps require markers and/or path to be created.");const o=P(n.style),c=n.hiDPI?"@2x":"",s=(e=n.format)!=null?e:"png";let l=~~((t=n.width)!=null?t:1024),u=~~((r=n.height)!=null?r:1024);n.hiDPI&&(l=~~(l/2),u=~~(u/2));const h=new URL(`maps/${encodeURIComponent(o)}/static/auto/${l}x${u}${c}.${s}`,g.maptilerApiURL);if("attribution"in n&&h.searchParams.set("attribution",n.attribution.toString()),"padding"in n&&h.searchParams.set("padding",n.padding.toString()),"markers"in n){let m="";const p="markerIcon"in n;p&&(m+=`icon:${n.markerIcon}|`),p&&"markerAnchor"in n&&(m+=`anchor:${n.markerAnchor}|`),p&&n.hiDPI&&(m+="scale:2|");const d=Array.isArray(n.markers[0])?n.markers:[n.markers];m+=d.map(y=>N(y,!p)).join("|"),h.searchParams.set("markers",m)}if("path"in n){let m="";if(m+=`fill:${(i=n.pathFillColor)!=null?i:"none"}|`,"pathStrokeColor"in n&&(m+=`stroke:${n.pathStrokeColor}|`),"pathWidth"in n){const p=n.pathWidth/(n.hiDPI?2:1);m+=`width:${p.toString()}|`}m+=b(n.path),h.searchParams.set("path",m)}return h.searchParams.set("key",(a=n.apiKey)!=null?a:f.apiKey),h.toString()}const Ee={centered:Ue,bounded:De,automatic:$e};var ke=Math.pow;const Pe=63710088e-1;function R(n){return n*3.28084}function D(n){return n%360*Math.PI/180}function we(n,e){return Math.cos(n*Math.PI/180)*2*Math.PI*6378137/(512*ke(2,e))}function Ne(n,e,t){return((1<<t)*e+n)*32+t}function B(n,e){const{pow:t,sin:r,cos:i,sqrt:a,atan2:o}=Math,c=D(e[1]-n[1]),s=D(e[0]-n[0]),l=D(n[1]),u=D(e[1]),h=t(r(c/2),2)+t(r(s/2),2)*i(l)*i(u);return 2*o(a(h),a(1-h))*Pe}function be(n,e,t){const r=new Map,i=[],a=[],o=we(n[0][1],e),c=Ce(n,o);for(const s of c){const l=s,[u,h]=Y(l,e,t),m=Ne(u,h,e),p={id:m,x:u,y:h,z:e};r.set(m,p),a.push({coordinate:l,tile:p})}for(const s of r.values())i.push(s);return{coords:a,tiles:i}}function Ce(n,e){const t=[];let r;for(const i of n){if(r!==void 0){const a=B(r,i),o=Math.ceil(a/e);for(let c=0;c<=o;c++){const s=[r[0]+(i[0]-r[0])*(c/o),r[1]+(i[1]-r[1])*(c/o)];t.push(s)}}else t.push(i);r=i}return t}function Ke(n,e,t,r,i=_){const{channels:a,image:o}=r;let[c,s]=J(n,e,t);c=W(c,t),s=W(s,t);const l=(s*t+c)*a;return i(o[l],o[l+1],o[l+2],a===4?o[l+3]:0)}function W(n,e){return Math.max(0,Math.min(e,Math.floor(n*e)))}function _(n,e,t){return-1e4+(n*256*256+e*256+t)*.1}var q=(n,e,t)=>new Promise((r,i)=>{var a=s=>{try{c(t.next(s))}catch(l){i(l)}},o=s=>{try{c(t.throw(s))}catch(l){i(l)}},c=s=>s.done?r(s.value):Promise.resolve(s.value).then(a,o);c((t=t.apply(n,e)).next())});function xe(n,e){return q(this,null,function*(){var t,r,i;const a="geometry"in n?n.geometry.coordinates:n.coordinates,{coords:o,tiles:c}=be(a,(t=e.zoom)!=null?t:13,(r=e.tileSize)!=null?r:512),s=yield Oe(c,e.tileRequest),l=je(o,s,(i=e.tileSize)!=null?i:512,e.elevationParser);let u=He(l);return e.metric==="ft"&&(u=Me(u)),u})}function Oe(n,e){return q(this,null,function*(){const t=new Map,r=[];for(const i of n)r.push(e(i.x,i.y,i.z).then(a=>(t.set(i.id,a),a)).catch(a=>{console.error(a)}));return yield Promise.allSettled(r),t})}function je(n,e,t,r){const i=[];let a=0,o;for(const{tile:c,coordinate:s}of n){const l=e.get(c.id);if(l===void 0)throw new Error(`Missing tile ${c.id} (${c.x}-${c.y}-${c.z})`);const u=Ke(s,[c.z,c.x,c.y],t,l,r);i.push({distance:a,elevation:u,coordinate:s,tile:c}),o!==void 0&&(a+=B(o,s)),o=s}return i}function He(n){let e=1/0,t=-1/0,r=0;for(const i of n)i.elevation<e&&(e=i.elevation),i.elevation>t&&(t=i.elevation),r+=i.elevation;return{distance:n[n.length-1].distance,minElevation:e,maxElevation:t,avgElevation:r/n.length,startElevation:n[0].elevation,endElevation:n[n.length-1].elevation,points:n}}function Me(n){return{distance:R(n.distance),minElevation:R(n.minElevation),maxElevation:R(n.maxElevation),avgElevation:R(n.avgElevation),startElevation:R(n.startElevation),endElevation:R(n.endElevation),points:n.points.map(({distance:e,elevation:t,coordinate:r,tile:i})=>({distance:R(e),elevation:R(t),coordinate:r,tile:i}))}}export{K as ClientConfig,L as LanguageGeocoding,z as MapStyle,E as MapStyleVariant,k as ReferenceMapStyle,v as ServiceError,f as config,de as coordinates,ye as data,_ as defaultElevationParser,F as expandMapStyle,ce as geocoding,me as geolocation,U as mapStylePresetList,xe as profileLineString,Ee as staticMaps};
